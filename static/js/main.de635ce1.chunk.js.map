{"version":3,"sources":["components/ToDoFormComponent.js","components/ToDoItemsComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","props","Form","onSubmit","addTask","InputGroup","className","Control","type","placeholder","value","userInput","onChange","handleChange","Append","Button","variant","ToDoItems","entries","length","Fragment","ListGroup","map","item","Item","Row","Col","xs","text","onClick","handleEdit","delete","key","Main","useState","pendingItem","setPendingItem","tasks","setTasks","removeTask","filteredItems","filter","show","setShow","itemToEdit","setItemToEdit","pendingEdit","setPendingEdit","toggle","Container","fluid","md","event","preventDefault","newTask","Date","now","currentTasks","target","Modal","task","Body","Group","controlId","Label","defaultValue","Footer","App","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de635ce1.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\n\nconst ToDoForm = (props) => {\n    return (\n        <Form onSubmit={props.addTask}>\n            <InputGroup className=\"my-3\">\n                <Form.Control type=\"text\" placeholder=\"Enter a task\" className=\"border-primary\"\n                    value={props.userInput} onChange={props.handleChange}/>\n                <InputGroup.Append>\n                    <Button variant=\"primary text-white\" type=\"submit\">\n                        <i className=\"fa fa-plus\"></i>\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </Form>\n    );\n}\n\nexport default ToDoForm;","import React, {useState} from 'react';\nimport { ListGroup, Row, Col, Button, Form } from 'react-bootstrap';\n\nconst ToDoItems = (props) => {\n    if (props.entries.length > 0) {\n        return (\n            <React.Fragment>\n                <ListGroup>\n                    {props.entries.map( item => {\n                        return (\n                            <ListGroup.Item key={item.key} className=\"text-left list-unstyled bg-primary text-white border-light\">\n                                    <Row className=\"px-2\">\n                                        <Col xs={10} className=\"d-flex align-items-center\">\n                                            {item.text}\n                                        </Col>\n                                        <Col xs={2} className=\"px-2 d-flex justify-content-end\">\n                                            <Button type=\"button\" variant=\"primary text-white\" className=\"item-button\">\n                                                <i className=\"fa fa-lg fa-pencil\" onClick={() => props.handleEdit(item)}></i>\n                                            </Button>\n                                            <Button type=\"button\" variant=\"primary text-white\" className=\"item-button\">\n                                                <i className=\"fa fa-lg fa-times\" onClick={ () => props.delete(item.key)}></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                            </ListGroup.Item>\n                        );\n                    })}\n                </ListGroup>\n            </React.Fragment>\n        );\n    } else {\n        return <div></div>\n    }\n};\n\nexport default ToDoItems;","import React, {useState, useEffect} from 'react';\nimport ToDoForm from './ToDoFormComponent';\nimport ToDoItems from './ToDoItemsComponent';\n// import TaskModal from './TaskModalComponent';\nimport { Container, Row, Col, Modal, Button, Form} from 'react-bootstrap';\n\nfunction Main() {\n\n    const [pendingItem, setPendingItem] = useState(\"\");\n    const [tasks, setTasks] = useState([]);\n\n    const handleChange = (event) => {\n        setPendingItem( event.target.value );\n    }\n    \n    const addTask = (event) => {\n        event.preventDefault();\n        if (pendingItem) {\n            let newTask = {\n                text: pendingItem,\n                key: Date.now()\n            };\n            setTasks(currentTasks => [...currentTasks, newTask]);\n            setPendingItem(\"\"); // Clear input field for client after adding task\n        }\n    }\n\n    const removeTask = (key) => {\n        let filteredItems = tasks.filter( item => item.key !== key );\n        setTasks(filteredItems);\n    }\n\n    // Modal\n    const [show, setShow] = useState(false);\n    const [itemToEdit, setItemToEdit] = useState({text: \"\", key: null});\n    const [pendingEdit, setPendingEdit] = useState(\"\");\n\n    const toggle = () => setShow(!show);\n\n    const handleEditClick = (item) => {\n        setItemToEdit(item);\n        toggle();\n    };\n\n    const editTask = (event) => {\n        event.preventDefault();\n        setTasks(\n            tasks.map( task => {\n                if (task.key === itemToEdit.key) {\n                    return {text: pendingEdit, key: task.key};\n                }\n                return task;\n            })\n        );\n        toggle();\n    }\n\n    return (\n        <Container fluid className=\"main-wrapper\">\n            <Row>\n                <Col xs={10} md={6} className=\"content-wrapper mx-auto bg-light\">\n                    <h1 className=\"text-center\">To Do List</h1>\n                    <ToDoForm addTask={addTask} userInput={pendingItem} handleChange={handleChange}/>\n                    <ToDoItems entries={tasks} delete={removeTask} handleEdit={handleEditClick}/>\n                </Col>\n            </Row>\n            <Modal show={show}>\n                <Form onSubmit={editTask}>\n                    <Modal.Body>\n                        <Form.Group controlId=\"formEditTask\">\n                            <Form.Label>Edit Task</Form.Label>\n                            <Form.Control \n                                type=\"text\" \n                                defaultValue={itemToEdit.text} \n                                onChange={event => setPendingEdit(event.target.value)}/>\n                        </Form.Group>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant='secondary' onClick={toggle}>\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" variant='success text-white'>\n                            Save Changes\n                        </Button>\n                        <Button variant='danger' onClick={() => {removeTask(itemToEdit.key); toggle();}}>\n                            Delete Task\n                        </Button>\n                    </Modal.Footer>\n                </Form>\n            </Modal>\n        </Container>\n    );\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport './App.scss';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n            <Main />\n        </div>\n      </BrowserRouter>\n  );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'typeface-amatic-sc';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}