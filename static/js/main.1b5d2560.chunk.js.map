{"version":3,"sources":["components/ToDoFormComponent.js","components/ToDoItemsComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoForm","props","Form","onSubmit","addItem","InputGroup","className","Control","type","placeholder","value","userInput","onChange","handleChange","Append","Button","variant","ToDoItems","entries","length","Fragment","ListGroup","map","item","Item","Row","Col","xs","text","onClick","delete","key","Main","state","pendingItem","items","bind","removeItem","event","this","setState","target","preventDefault","newItem","Date","now","filteredItems","filter","Container","fluid","md","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b5d2560.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\n\nconst ToDoForm = (props) => {\n    return (\n        <Form onSubmit={props.addItem}>\n            <InputGroup className=\"my-3\">\n                <Form.Control type=\"text\" placeholder=\"Enter a task\" className=\"border-primary\"\n                    value={props.userInput} onChange={props.handleChange}/>\n                <InputGroup.Append>\n                    <Button variant=\"primary text-white\" type=\"submit\">\n                        <i className=\"fa fa-plus\"></i>\n                    </Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </Form>\n    );\n}\n\nexport default ToDoForm;","import React from 'react';\nimport { ListGroup, Row, Col, Button } from 'react-bootstrap';\n\nconst ToDoItems = (props) => {\n        if (props.entries.length > 0) {\n            return (\n                <React.Fragment>\n                    <ListGroup>\n                        {props.entries.map( item => {\n                            return (\n                                <ListGroup.Item key={item.key} className=\"text-left list-unstyled bg-primary text-white border-light\">\n                                    <Row className=\"px-2\">\n                                        <Col xs={10} className=\"d-flex align-items-center\">\n                                            {item.text}\n                                        </Col>\n                                        <Col xs={2} className=\"px-2 d-flex justify-content-end\">\n                                            <Button type=\"button\" variant=\"primary text-white\" className=\"item-button\">\n                                                <i className=\"fa fa-lg fa-times\" onClick={ () => props.delete(item.key)}></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            );\n                        })}\n                    </ListGroup>\n                </React.Fragment>\n            );\n        } else {\n            return <div></div>\n        }\n};\n\nexport default ToDoItems;","import React, {Component} from \"react\";\nimport ToDoForm from './ToDoFormComponent';\nimport ToDoItems from './ToDoItemsComponent';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pendingItem: \"\",\n            items: []\n        }\n        this.addItem = this.addItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ pendingItem: event.target.value });\n    }\n\n    addItem(event) {\n        event.preventDefault();\n        if (this.state.pendingItem) {\n            let newItem = {\n                text: this.state.pendingItem,\n                key: Date.now()\n            };\n            this.setState({\n                pendingItem: \"\",  // Clear input field for client after adding task\n                items: [...this.state.items, newItem]\n            });\n        }\n    }\n\n    removeItem(key) {\n        let filteredItems = this.state.items.filter( item => item.key !== key );\n        this.setState({ items: filteredItems });\n    }\n\n    render() {\n        return (\n            <Container fluid className=\"main-wrapper\">\n                <Row>\n                    <Col xs={10} md={6} className=\"content-wrapper mx-auto bg-light\">\n                        <h1 className=\"text-center\">To Do List</h1>\n                        <ToDoForm addItem={this.addItem} userInput={this.state.pendingItem} handleChange={this.handleChange}/>\n                        <ToDoItems entries={this.state.items} delete={this.removeItem}/>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport './App.scss';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n            <Main />\n        </div>\n      </BrowserRouter>\n  );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'typeface-amatic-sc';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}